openapi: 3.0.3
info:
  title: Confero API
  description: |-
    Some description
  version: 1.0.0

servers:
  - url: api

security:
  - BearerAuth: [ ]

tags:
  - name: ORCID
    description: ORCID
  - name: Conference Edition
    description: All data related to managing the conference editions
  - name: Admin
    description: endpoints admin will interact with
  - name: User
    description: endpoints accessible for all users
  - name: Application
    description: All data related to managing the applications to the special sessions
  - name: Session
    description: All data related to managing the sessions
  - name: Organizer
    description: All data related to organizers
  - name: Presentation
    description: All data related to presentations
  - name: Profile
    description: All data related to user profile

paths:
  /profile:
    get:
      tags:
        - Profile
        - User
      summary: Get user profile
      description: |-
        Get user profile.
      operationId: getUserProfile
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileResponse'
  /profile/info:
    put:
      tags:
        - Profile
        - User
      summary: Update user info.
      description: |-
        Update user info.
      operationId: updateUserInfo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfileInfoRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /profile/email:
    put:
      tags:
        - Profile
        - User
      summary: Update user email
      description: |-
        Update user email.
      operationId: updateUserEmail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEmailRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /profile/email/verify:
    get:
      tags:
        - Profile
        - User
      summary: Verify user email
      description: |-
        Verify user email.
      operationId: verifyUserEmail
      parameters:
        - name: token
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'


  /profile/avatar:
    put:
      tags:
        - Profile
        - User
      summary: Update profile avatar
      description: |-
        Update profile avatar.
      operationId: updateAvatar
      requestBody:
        required: true
        content:
            multipart/form-data:
                schema:
                  $ref: '#/components/schemas/UpdateAvatarRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'


  /orcid/{orcid}:
    get:
      tags:
        - ORCID
      summary: Get ORCID data
      operationId: getOrcidData
      parameters:
        - name: orcid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrcidInfoResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /conference-edition:
    post:
      tags:
        - Conference Edition
        - Admin
      summary: Create new conference edition
      description: |-
        Admin-only endpoint to create a new conference edition.
        A new edition will not be created if there is already an active edition (i.e., the application deadline has not passed).
      operationId: createConferenceEdition
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateConferenceEditionRequest'
            encoding:
              invitationList:
                contentType: text/csv
              applicationDeadlineTime:
                contentType: text/plain

      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConferenceEditionResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Conference Edition
        - Admin
      summary: Get all conference editions
      description: |-
        Admin-only endpoint to get all conference editions.
        It will return all editions.
      operationId: getAllConferenceEditions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConferenceEditionResponse'

  /conference-edition/summary:
    get:
      tags:
        - Conference Edition
        - User
      summary: Get conference edition summary
      description: |-
        Get conference edition summary. Will provide useful information about the current conference edition, for example, if it is accepting new applications.
      operationId: getConferenceEditionSummary
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConferenceEditionSummaryResponse'


  /conference-edition/{conferenceEditionId}:
    put:
      tags:
        - Conference Edition
        - Admin
      summary: Update conference edition
      operationId: updateConferenceEdition
      parameters:
        - $ref: '#/components/parameters/ConferenceEditionId'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateConferenceEditionRequest'
            encoding:
              invitationList:
                contentType: text/csv
              applicationDeadlineTime:
                contentType: text/plain
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConferenceEditionResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Conference Edition
        - Admin
      summary: Delete conference edition
      operationId: deleteConferenceEdition
      parameters:
        - $ref: '#/components/parameters/ConferenceEditionId'
      responses:
        '204':
          description: No content
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'


  /application:
    post:
      tags:
        - Application
        - User
      summary: Create new application.

      description: |-
        Create a new application. 
        
        - Only users can create applications. Admins are not allowed to create applications and will receive an error.
        - Applications can be created as "draft" if the `saveAsDraft` field is set to `true`.
        - If `saveAsDraft` is `false`, the application is sent for review and its status is set to "PENDING".
        - An application cannot be created if the application deadline has passed.
      

      operationId: createApplication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApplicationRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationPreviewResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Application
        - User
        - Admin
      summary: Get all applications.
      description: |-
        Retrieve all applications:
  
        - Users will see only their own applications.
        - Admins will see all applications across the system, except those that are already "ACCEPTED" (Sessions).
      
      operationId: getApplications
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicationPreviewResponse'

  /application/{applicationId}:
    get:
      tags:
        - Application
        - User
        - Admin
      summary: Get complete application data as well as comments
      operationId: getApplication
      description: |-
        Retrieve full details of an application, including its comments.
  
        - Users can access their own applications.
        - Admins can access any application.
        - An error is returned if the application does not exist or is not accessible to the user.
      parameters:
        - $ref: '#/components/parameters/ApplicationId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Application
        - User
      summary: Update an application
      description: |-
        Update an existing application:
  
        - Changes to the application can only be made if its status is not "RESOLVED".
        - If `saveAsDraft` is `true`, the application remains as "DRAFT".
        - If `saveAsDraft` is `false`, the application is sent for review, and its status is set to "PENDING".
        - Updates to the application will override its existing data. For example, if presentations are included in the update, they will replace the current presentations.
        - Admins are not allowed to update applications and will receive an error.
      operationId: updateApplication
      parameters:
        - $ref: '#/components/parameters/ApplicationId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApplicationRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationPreviewResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Application
        - User
      summary: Delete an application
      description: |-
         Delete an application:
          - Applications can only be deleted if their status is "DRAFT" or "PENDING".
          - Admins are not allowed to delete applications and will receive an error.
          - Once deleted, an application cannot be recovered.
      operationId: deleteApplication
      parameters:
        - $ref: '#/components/parameters/ApplicationId'
      responses:
        '204':
          description: No content
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /application/{applicationId}/review:
    post:
      tags:
        - Application
        - Admin
      summary: Review an application
      description: |-
        Admin-only endpoint to review an application.
  
        - Only applications with the status "PENDING" can be reviewed.
        - The `ReviewRequest` determines the action:
          - "ACCEPT": Marks the application as "ACCEPTED".
          - "REJECT": Marks the application as "REJECTED".
          - "ASK_FOR_ADJUSTMENTS": Requires a `comment` to request changes and updates the status to "CHANGE_REQUESTED".
        - Users attempting to access this endpoint will receive an error.
      operationId: reviewApplication
      parameters:
        - $ref: '#/components/parameters/ApplicationId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationPreviewResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /session:
    get:
      tags:
        - Session
        - User
        - Admin
      summary: Get all sessions
      description: |-
        Retrieve all sessions with the status `ACCEPTED` and configured timetable. This endpoint is publicly accessible and does not require authentication.
        
        The response includes:
        - Session details such as title, start and end times, and tags.
        - Presenters associated with each session.
        - A flag indicating whether the session is part of the active conference edition.
      operationId: getSessions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SessionPreviewResponse'

    post:
        tags:
            - Session
            - User
        summary: Create test session
        description: |-
            Create test session.
        operationId: createSession
        deprecated: true
        requestBody:
            required: true
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/CreateApplicationRequest'
        responses:
            '201':
              description: Created
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/SessionPreviewResponse'
            '400':
              description: Bad request
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/ErrorResponse'


  /session/manage:
    get:
      tags:
        - Session
        - Organizer
      summary: Get all sessions organizer can manage
      description: |-
        Retrieves all sessions that the current user can manage. A session is considered manageable if the user has an 
        email or ORCID that is associated with a presenter within the session. The response includes details about 
        whether the session belongs to an active conference edition, its start time, and its end time.
      operationId: getManagableSessions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SessionPreviewResponse'


  /session/event:
    get:
      tags:
        - Session
        - User
      summary: Get events from all sessions
      operationId: getSessionEvents
      parameters:
        - name: pageSize
          in: query
          schema:
            type: integer
            default: 5

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SesssionEventResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  
  /session/agenda/add-all-by-organizer/{organizerId}:
    post:
      tags:
        - Session
        - User
      summary: Add all sessions by organizer to user's agenda
      description: Add all sessions by the organizer to the user's personal agenda.
      operationId: addAllSessionsByOrganizerToAgenda
      parameters:
        - $ref: '#/components/parameters/OrginizerId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: integer
                description: Number of sessions added to the agenda
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  
  
  /session/agenda:
    get:
      tags:
        - Session
        - User
      summary: Get user's conference agenda
      description: |-
        Retrieve all sessions that a user has added to their agenda. Organizers will also see sessions they are involved in, even if they have not yet configured their agenda.
      operationId: getPersonalAgenda
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConferenceAgenda'
    post:
      tags:
        - Session
        - User
      summary: Add a session to user's agenda
      description: Add a single session to the user's personal agenda.
      operationId: addSessionToAgenda
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sessionId:
                  type: integer
                  format: int64
                  description: The ID of the session to be added.
      responses:
        '200':
          description: OK
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Session
        - User
      summary: Remove a session from user's agenda
      description: Remove a single session from the user's personal agenda.
      operationId: removeSessionFromAgenda
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sessionId:
                  type: integer
                  format: int64
                  description: The ID of the session to be deleted from agenda.
      responses:
        '204':
          description: No content
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          

  /session/{sessionId}:
    get:
      tags:
        - Session
        - User
      summary: Get a session
      operationId: getSession
      parameters:
        - $ref: '#/components/parameters/SessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Session
        - User
      summary: Update a session
      operationId: updateSession
      parameters:
        - $ref: '#/components/parameters/SessionId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSessionRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      

  /session/{sessionId}/presentation/{presentationId}/attachment:
    post:
      tags:
        - Session
        - User
        - Presentation
      summary: Add presentation attachement.
      description: |-
        Add attachement to the presentation. It will be possible only for presentation participants.
      operationId: addPresentationAttachment
      parameters:
        - $ref: '#/components/parameters/SessionId'
        - $ref: '#/components/parameters/PresentationId'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AttachmentRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /session/{sessionId}/presentation/{presentationId}/attachment/{attachmentId}:
    delete:
      tags:
        - Session
        - User
        - Presentation
      summary: Delete presentation attachment
      description: |-
        Delete attachment from the presentation. It will be possible only for presentation participants.
      operationId: deletePresentationAttachment
      parameters:
        - $ref: '#/components/parameters/SessionId'
        - $ref: '#/components/parameters/AttachmentId'
        - $ref: '#/components/parameters/PresentationId'
      responses:
        '204':
          description: No content
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /organizer:
    get:
      tags:
        - Organizer
      summary: Find organizers
      description: |-
        Get all organizers by search query(first name, last name or orcid). It will return organizers from only current conference edition.
      operationId: findOrganizers
      parameters:
        - name: searchQuery
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizerResponse'
  /organizer/{orginizerId}/participation:
    get:
      deprecated: true
      tags:
        - Organizer
      summary: Get organizer participations
      operationId: getOrganizerParticipations
      description: |-
        Get all participations of the organizer within current conference edition.
      parameters:
        - $ref: '#/components/parameters/OrginizerId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SessionPreviewResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'


components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  parameters:
    SessionId:
      name: sessionId
      in: path
      required: true
      schema:
        type: integer
        format: int64
      description: Session ID
    PresentationId:
      name: presentationId
      in: path
      required: true
      schema:
        type: integer
        format: int64
      description: Presentation ID
    ConferenceEditionId:
      name: conferenceEditionId
      in: path
      required: true
      schema:
        type: integer
        format: int64
      description: Conference edition ID
    AttachmentId:
      name: attachmentId
      in: path
      required: true
      schema:
        type: integer
        format: int64
      description: Attachment ID
    ApplicationId:
      name: applicationId
      in: path
      required: true
      schema:
        type: integer
        format: int64
      description: Application ID
    OrginizerId:
      name: organizerId
      in: path
      required: true
      schema:
        type: integer
        format: int64
      description: Organizer ID
  
  responses:
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'


  schemas:
    SessionType:
      type: string
      enum: [ SESSION, WORKSHOP, TUTORIAL ]
    ApplicationStatus:
      type: string
      enum: [ PENDING, DRAFT, REJECTED, ACCEPTED, CHANGE_REQUESTED ]
    ReviewType:
      type: string
      enum: [ ACCEPT, REJECT, ASK_FOR_ADJUSTMENTS ]
    ErrorReason:
      type: string
      enum:
        - ACTIVE_CONFERENCE_EDITION_ALREADY_EXISTS
        - USER_NOT_FOUND
        - APPLICATION_NOT_FOUND
        - SESSION_NOT_FOUND
        - NOT_FOUND
        - INVALID_FILE_FORMAT
        - S3_UPLOAD_ERROR
        - EMAIL_CANNOT_BE_UPDATED
        - NO_ACTIVE_CONFERENCE_EDITION
        - UNAUTHORIZED
        - INVALID_ORCID
        - UNEXPECTED_ERROR
        - ADMIN_CANNOT_CREATE_APPLICATION
        - ADMIN_CANNOT_DELETE_APPLICATION
        - ADMIN_CANNOT_UPDATE_APPLICATION
        - EMAIL_ALREADY_EXISTS
        - EMAIL_SENDING_ERROR
        - NO_PRESENTATIONS_PROVIDED
        - NO_PRESENTERS_PROVIDED
        - FORBIDDEN
        - SESSION_IS_NOT_FROM_CURRENT_CONFERENCE_EDITION
        - PRESENTATION_NOT_FOUND
        - BOTH_START_AND_END_TIME_MUST_BE_PROVIDED_FOR_PRESENTATION_UPDATE
        - ONLY_PARTICIPANTS_CAN_UPDATE_SESSION
        - START_TIME_MUST_BE_BEFORE_END_TIME
        - PRESENTER_NOT_FOUND
        - ONLY_PARTICIPANT_CAN_UPDATE_PRESENTATION
        - ATTACHMENT_NOT_FOUND
        - CONFERENCE_EDITION_CANNOT_HAVE_DEADLINE_IN_THE_PAST
    SessionEventType:
      type: string
      enum: [ FILE_UPLOAD]
    ReviewRequest:
      type: object
      required:
        - type
      properties:
        type:
          $ref: '#/components/schemas/ReviewType'
        comment:
          type: string

    ErrorResponse:
      type: object
      properties:
        reason:
          $ref: '#/components/schemas/ErrorReason'
    OrcidInfoResponse:
      type: object
      properties:
        orcid:
          type: string
        name:
          type: string
        surname:
          type: string
        title:
          type: string
        organization:
          type: string
    CreateConferenceEditionRequest:
      type: object
      required:
        - applicationDeadlineTime
      properties:
        applicationDeadlineTime:
          type: string
          format: date-time
          description: "The application deadline in ISO 8601 format (e.g., 2024-11-03T12:00:00Z)."
        invitationList:
          type: string
          format: binary
          description: "CSV file containing the list of invitations."
    UpdateConferenceEditionRequest:
      type: object
      properties:
        applicationDeadlineTime:
          type: string
          format: date-time
          description: "The application deadline in ISO 8601 format (e.g., 2024-11-03T12:00:00Z)."
        invitationList:
          type: string
          format: binary
          description: "CSV file containing the list of invitations."

    ConferenceEditionResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Conference edition ID
        applicationDeadlineTime:
          type: string
          format: date-time
        numberOfInvitations:
          type: integer
        createdAt:
          type: string
          format: date-time
    ConferenceEditionSummaryResponse:
      type: object
      properties:
        acceptingNewApplications:
          type: boolean
    CreateApplicationRequest:
      type: object
      required:
        - title
        - type
        - tags
        - description
        - presentations
        - saveAsDraft
      properties:
        title:
          type: string
        type:
          $ref: '#/components/schemas/SessionType'
        tags:
          type: array
          items:
            type: string
        description:
          type: string
        presentations:
          type: array
          items:
            $ref: '#/components/schemas/PresentationRequest'
        saveAsDraft:
          type: boolean

    UpdateApplicationRequest:
      type: object
      properties:
        title:
          type: string
        type:
          $ref: '#/components/schemas/SessionType'
        tags:
          type: array
          items:
            type: string
        description:
          type: string
        presentations:
          type: array
          items:
            $ref: '#/components/schemas/PresentationRequest'
        saveAsDraft:
          type: boolean
    
    PresenterRequest:
      type: object
      required:
        - orcid
        - email
      properties:
        orcid:
          type: string
        email:
          type: string
        isSpeaker:
          type: boolean

    PresenterResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        surname:
          type: string
        orcid:
          type: string
        isSpeaker:
          type: boolean
    
    PresentationRequest:
      type: object
      required:
        - title
        - presenters
        - description
      properties:
        title:
          type: string
        description:
          type: string
        presenters:
          type: array
          items:
            $ref: '#/components/schemas/PresenterRequest'
            
    ApplicationPresentationResponse:
      type: object
      properties:
        title:
          type: string
          required:
            - title
        description:
          type: string
        presenters:
          type: array
          items:
            $ref: '#/components/schemas/PresenterResponse'

    PresentationSessionResponse:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentResponse'
        presenters:
          type: array
          items:
            $ref: '#/components/schemas/PresenterResponse'
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time

    UpdateSessionRequest:
      type: object
      properties:
        presentations:
          type: array
          items:
            $ref: '#/components/schemas/UpdatePresentationRequest'

    UpdatePresentationRequest:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        description:
          type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time

    ApplicationPreviewResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        type:
          $ref: '#/components/schemas/SessionType'
        presenters:
          type: array
          items:
            $ref: '#/components/schemas/PresenterResponse'
        createdAt:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/ApplicationStatus'
        from_current_conference_edition:
          type: boolean
    ApplicationResponse:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        type:
          $ref: '#/components/schemas/SessionType'
        tags:
          type: array
          items:
            type: string
        description:
          type: string
        presentations:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationPresentationResponse'
        createdAt:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/ApplicationStatus'
        comments:
          type: array
          items:
            $ref: '#/components/schemas/CommentResponse'
        from_current_conference_edition:
          type: boolean
    CommentResponse:
      type: object
      properties:
        id:
          type: string
        content:
          type: string
        createdAt:
          type: string
          format: date-time
    SessionPreviewResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        tags:
          type: array
          items:
            type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        presenters:
          type: array
          items:
            $ref: '#/components/schemas/PresenterResponse'
        isInCalendar:
         type: boolean
        from_current_conference_edition:
          type: boolean
    SessionResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        isMine:
          type: boolean
        description:
          type: string
        presentations:
          type: array
          items:
            $ref: '#/components/schemas/PresentationSessionResponse'
        tags:
          type: array
          items:
            type: string
        from_current_conference_edition:
          type: boolean
    AttachmentResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        url:
          type: string
    AttachmentRequest:
      type: object
      required:
        - file
      properties:
        file:
          type: string
          format: binary
    OrganizerResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        surname:
          type: string
        orcid:
          type: string
    ConferenceAgenda:
      type: array
      items:
        $ref: '#/components/schemas/SessionPreviewResponse'
      
    ProfileResponse:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        emails:
          type: array
          items:
            $ref: '#/components/schemas/EmailResponse'
        orcid:
          type: string
        isAdmin:
          type: boolean
        avatarUrl:
          type: string
        isInvitee:
          type: boolean
    EmailResponse:
      type: object
      properties:
        email:
          type: string
        confirmed:
          type: boolean
    UpdateEmailRequest:
      type: object
      properties:
        email:
          type: string
          format: email
    UpdateProfileInfoRequest:
      type: object
      properties:
        name:
          type: string
        surname:
          type: string
    UpdateAvatarRequest:
      type: object
      properties:
        avatarFile:
          type: string
          format: binary
          description: "Avatar image file to be uploaded"

    SesssionEventResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        type:
          $ref: '#/components/schemas/SessionEventType'
        userFirstName:
          type: string
        userLastName:
          type: string
        timestamp:
          type: string
          format: date-time
        sessionId:
          type: integer
          format: int64
