openapi: 3.0.3
info:
  title: Confero API
  description: |-
    Some description
  version: 1.0.0

servers:
  - url: http://api/localhost:8080

security:
  - BearerAuth: [ ]

tags:
  - name: ORCID
    description: ORCID
  - name: Conference Edition
    description: All data related to managing the conference editions
  - name: Admin
    description: endpoints admin will interact with
  - name: User
    description: endpoints accessible for all users
  - name: Application
    description: All data related to managing the applications to the special sessions
  - name: Session
    description: All data related to managing the sessions
  - name: Organizer
    description: All data related to organizers
  - name: Presentation
    description: All data related to presentations
  - name: Profile
    description: All data related to user profile

paths:
  /profile:
    get:
      tags:
        - Profile
        - User
      summary: Get user profile
      description: |-
        Get user profile.
      operationId: getUserProfile
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileResponse'

  /profile/email:
    put:
      tags:
        - Profile
        - User
      summary: Update user email
      description: |-
        Update user email.
      operationId: updateUserEmail
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEmailRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'


  /profile/avatar:
    put:
      tags:
        - Profile
        - User
      summary: Update profile avatar
      description: |-
        Update profile avatar.
      operationId: updateAvatar
      requestBody:
        required: true
        content:
            multipart/form-data:
                schema:
                  $ref: '#/components/schemas/UpdateAvatarRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'


  /orcid/{orcid}:
    get:
      tags:
        - ORCID
      summary: Get ORCID data
      operationId: getOrcidData
      parameters:
        - name: orcid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrcidInfoResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /conference-edition:
    post:
      tags:
        - Conference Edition
        - Admin
      summary: Create new conference edition
      description: |-
        Admin-only endpoint to create a new conference edition.
        A new edition will not be created if there is already an active edition (i.e., the application deadline has not passed).
      operationId: createConferenceEdition
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateConferenceEditionRequest'
            encoding:
              invitationList:
                contentType: text/csv
              applicationDeadlineTime:
                contentType: text/plain

      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConferenceEditionResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Conference Edition
        - Admin
      summary: Get all conference editions
      description: |-
        Admin-only endpoint to get all conference editions.
        It will return all editions.
      operationId: getAllConferenceEditions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConferenceEditionResponse'

  /conference-edition/summary:
    get:
      tags:
        - Conference Edition
        - User
      summary: Get conference edition summary
      description: |-
        Get conference edition summary. Will provide useful information about the current conference edition, for example, if it is accepting new applications.
      operationId: getConferenceEditionSummary
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConferenceEditionSummaryResponse'


  /conference-edition/{conferenceEditionId}:
    put:
      tags:
        - Conference Edition
        - Admin
      summary: Update conference edition
      operationId: updateConferenceEdition
      parameters:
        - $ref: '#/components/parameters/ConferenceEditionId'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateConferenceEditionRequest'
            encoding:
              invitationList:
                contentType: text/csv
              applicationDeadlineTime:
                contentType: text/plain
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConferenceEditionResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /application:
    post:
      tags:
        - Application
        - User
      summary: Create new application.

      description:
        |-
        Create new application. Application will be created if the application deadline has not passed. Application
        will be created as "draft" if the "saveAsDraft" is true.
      

      operationId: createApplication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateApplicationRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationPreviewResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    get:
      tags:
        - Application
        - User
        - Admin
      summary: Get all applications.
      description: |-
        Get all applications. It will return all applications created by the user. Admin will see all applications.
      operationId: getApplications
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicationPreviewResponse'

  /application/{applicationId}:
    get:
      tags:
        - Application
        - User
        - Admin
      summary: Get complete application data as well as comments
      operationId: getApplication
      parameters:
        - $ref: '#/components/parameters/ApplicationId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Application
        - User
      summary: Update an application
      description: |-
        Update an application. It will be possible only if the application is not "resolved".
        Changes made to the draft application will be saved as draft only if the "saveAsDraft" is true, otherwise, the application will be sent for review.
      operationId: updateApplication
      parameters:
        - $ref: '#/components/parameters/ApplicationId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateApplicationRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationPreviewResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      tags:
        - Application
        - User
      summary: Delete an application
      description: |-
        Delete an application. It will be possible only if the application is not "resolved".
      operationId: deleteApplication
      parameters:
        - $ref: '#/components/parameters/ApplicationId'
      responses:
        '204':
          description: No content
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /application/{applicationId}/review:
    post:
      tags:
        - Application
        - Admin
      summary: Review an application
      description: |-
        Admin-only endpoint to review an application.
        It will be possible only if the application is not "resolved". "ASK_FOR_ADJUSTMENTS" review type requires additional field "comment".
      operationId: reviewApplication
      parameters:
        - $ref: '#/components/parameters/ApplicationId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationPreviewResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /session:
    get:
      tags:
        - Session
        - User
        - Admin
      summary: Get all sessions
      description: |-
        Retrieve all sessions available to the user. If the user is a participant, they will see all sessions in the conference edition they were invited to.
        If the user is a presenter, they will see all sessions they are involved in.
        This will return only sessions with configured timetable.
        Admin will see all sessions.
      operationId: getSessions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SessionPreviewResponse'
    post:
        tags:
            - Session
            - User
        summary: Create test session
        description: |-
            Create test session.
        operationId: createSession
        deprecated: true
        requestBody:
            required: true
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/CreateApplicationRequest'
        responses:
            '201':
              description: Created
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/SessionPreviewResponse'
            '400':
              description: Bad request
              content:
                application/json:
                  schema:
                    $ref: '#/components/schemas/ErrorResponse'
  /session/event:
    get:
      tags:
        - Session
        - User
      summary: Get session events
      operationId: getSessionEvents
      parameters:
        - $ref: '#/components/parameters/SessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SesssionEventResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  
  
  /session/agenda:
    get:
      tags:
        - Session
        - User
      summary: Get user's conference agenda
      description: |-
        Retrieve all sessions that a user has added to their agenda. Organizers will also see sessions they are involved in, even if they have not yet configured their agenda.
      operationId: getPersonalAgenda
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConferenceAgenda'
    put:
      tags:
        - Session
        - User
      summary: Modify user's conference agenda
      description: |-
        Modify user's conference agenda.
      operationId: modifyPersonalAgenda
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConferenceAgenda'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConferenceAgenda'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      
      

  /session/{sessionId}:
    get:
      tags:
        - Session
        - User
      summary: Get a session
      operationId: getSession
      parameters:
        - $ref: '#/components/parameters/SessionId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /session/{sessionId}/presentation/{presentationId}:
    put:
      tags:
        - Session
        - User
        - Presentation
      summary: Update presentation
      operationId: updatePresentation
      description: |-
        Update presentation. It will be possible only for orginizers of the session.
      parameters:
        - $ref: '#/components/parameters/SessionId'
        - $ref: '#/components/parameters/PresentationId'

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSessionPresentationRequest'

      responses:
        '200':
          description: OK
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
                

  /session/{sessionId}/presentation/{presentationId}/attachment:
    post:
      tags:
        - Session
        - User
        - Presentation
      summary: Add presentation attachement.
      description: |-
        Add attachement to the presentation. It will be possible only for presentation participants.
      operationId: addPresentationAttachment
      parameters:
        - $ref: '#/components/parameters/SessionId'
        - $ref: '#/components/parameters/PresentationId'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AttachmentRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /session/{sessionId}/presentation/{presentationId}/attachment/{attachmentId}:
    delete:
      tags:
        - Session
        - User
        - Presentation
      summary: Delete presentation attachment
      description: |-
        Delete attachment from the presentation. It will be possible only for presentation participants.
      operationId: deletePresentationAttachment
      parameters:
        - $ref: '#/components/parameters/SessionId'
        - $ref: '#/components/parameters/AttachmentId'
        - $ref: '#/components/parameters/PresentationId'
      responses:
        '204':
          description: No content
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /organizer:
    get:
      tags:
        - Organizer
      summary: Find organizers
      description: |-
        Get all organizers by first name, last name or orcid. It will return organizers from all conference editions.
      operationId: findOrganizers
      parameters:
        - name: name
          in: query
          schema:
            type: string
        - name: surname
          in: query
          schema:
            type: string
        - name: orcid
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizerResponse'
  /organizer/{orginizerId}/participation:
    get:
      tags:
        - Organizer
      summary: Get organizer participations
      operationId: getOrganizerParticipations
      description: |-
        Get all participations of the organizer within current conference edition.
      parameters:
        - $ref: '#/components/parameters/OrginizerId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SessionPreviewResponse'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'


components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  parameters:
    SessionId:
      name: sessionId
      in: path
      required: true
      schema:
        type: integer
        format: int64
      description: Session ID
    PresentationId:
      name: presentationId
      in: path
      required: true
      schema:
        type: integer
        format: int64
      description: Presentation ID
    ConferenceEditionId:
      name: conferenceEditionId
      in: path
      required: true
      schema:
        type: integer
        format: int64
      description: Conference edition ID
    AttachmentId:
      name: attachmentId
      in: path
      required: true
      schema:
        type: integer
        format: int64
      description: Attachment ID
    ApplicationId:
      name: applicationId
      in: path
      required: true
      schema:
        type: integer
        format: int64
      description: Application ID
    OrginizerId:
      name: organizerId
      in: path
      required: true
      schema:
        type: integer
        format: int64
      description: Organizer ID
  
  responses:
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'


  schemas:
    SessionType:
      type: string
      enum: [ SESSION, WORKSHOP, TUTORIAL ]
    ApplicationStatus:
      type: string
      enum: [ PENDING, DRAFT, REJECTED, ACCEPTED, CHANGE_REQUESTED ]
    ReviewType:
      type: string
      enum: [ ACCEPT, REJECT, ASK_FOR_ADJUSTMENTS ]
    ErrorReason:
      type: string
      enum:
        - ACTIVE_CONFERENCE_EDITION_ALREADY_EXISTS
        - USER_NOT_FOUND
        - APPLICATION_NOT_FOUND
        - SESSION_NOT_FOUND
        - NOT_FOUND
        - INVALID_FILE_FORMAT
        - S3_UPLOAD_ERROR
        - EMAIL_CANNOT_BE_UPDATED
        - NO_ACTIVE_CONFERENCE_EDITION
        - UNAUTHORIZED
        - INVALID_ORCID
    SessionEventType:
      type: string
      enum: [ FILE_UPLOAD]
    ReviewRequest:
      type: object
      required:
        - type
      properties:
        type:
          $ref: '#/components/schemas/ReviewType'
        comment:
          type: string

    ErrorResponse:
      type: object
      properties:
        reason:
          $ref: '#/components/schemas/ErrorReason'
    OrcidInfoResponse:
      type: object
      properties:
        orcid:
          type: string
        name:
          type: string
        surname:
          type: string
        title:
          type: string
        organization:
          type: string
    CreateConferenceEditionRequest:
      type: object
      required:
        - applicationDeadlineTime
      properties:
        applicationDeadlineTime:
          type: string
          format: date-time
          description: "The application deadline in ISO 8601 format (e.g., 2024-11-03T12:00:00Z)."
        invitationList:
          type: string
          format: binary
          description: "CSV file containing the list of invitations."
    UpdateConferenceEditionRequest:
      type: object
      properties:
        applicationDeadlineTime:
          type: string
          format: date-time
          description: "The application deadline in ISO 8601 format (e.g., 2024-11-03T12:00:00Z)."
        invitationList:
          type: string
          format: binary
          description: "CSV file containing the list of invitations."

    ConferenceEditionResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Conference edition ID
        applicationDeadlineTime:
          type: string
          format: date-time
        numberOfInvitations:
          type: integer
        createdAt:
          type: string
          format: date-time
    ConferenceEditionSummaryResponse:
      type: object
      properties:
        acceptingNewApplications:
          type: boolean
    CreateApplicationRequest:
      type: object
      required:
        - title
        - type
        - tags
        - description
        - presentations
        - saveAsDraft
      properties:
        title:
          type: string
        type:
          $ref: '#/components/schemas/SessionType'
        tags:
          type: array
          items:
            type: string
        description:
          type: string
        presentations:
          type: array
          items:
            $ref: '#/components/schemas/PresentationRequest'
        saveAsDraft:
          type: boolean

    UpdateApplicationRequest:
      type: object
      properties:
        title:
          type: string
        type:
          $ref: '#/components/schemas/SessionType'
        tags:
          type: array
          items:
            type: string
        description:
          type: string
        presentations:
          type: array
          items:
            $ref: '#/components/schemas/PresentationRequest'
        saveAsDraft:
          type: boolean
    
    PresenterRequest:
      type: object
      required:
        - orcid
        - email
      properties:
        orcid:
          type: string
        email:
          type: string
        isSpeaker:
          type: boolean

    PresenterResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        surname:
          type: string
        orcid:
          type: string
        isSpeaker:
          type: boolean
    
    PresentationRequest:
      type: object
      required:
        - title
        - presenters
      properties:
        title:
          type: string
        presenters:
          type: array
          items:
            $ref: '#/components/schemas/PresenterRequest'
            
    ApplicationPresentationResponse:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        presenters:
          type: array
          items:
            $ref: '#/components/schemas/PresenterResponse'

    PresentationSessionResponse:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentResponse'
        presenters:
          type: array
          items:
            $ref: '#/components/schemas/PresenterResponse'
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
    UpdateSessionPresentationRequest:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time

    ApplicationPreviewResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        type:
          $ref: '#/components/schemas/SessionType'
        presenters:
          type: array
          items:
            $ref: '#/components/schemas/PresenterResponse'
        lastUpdated:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/ApplicationStatus'
    ApplicationResponse:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        type:
          $ref: '#/components/schemas/SessionType'
        tags:
          type: array
          items:
            type: string
        description:
          type: string
        presentations:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationPresentationResponse'
        lastUpdated:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/ApplicationStatus'
        comments:
          type: array
          items:
            $ref: '#/components/schemas/CommentResponse'
    CommentResponse:
      type: object
      properties:
        id:
          type: string
        message:
          type: string
        createdAt:
          type: string
          format: date-time
    SessionPreviewResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        tags:
          type: array
          items:
            type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        presenters:
          type: array
          items:
            $ref: '#/components/schemas/PresenterResponse'
    SessionResponse:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        presentations:
          type: array
          items:
            $ref: '#/components/schemas/PresentationSessionResponse'
        tags:
          type: array
          items:
            type: string
    AttachmentResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        url:
          type: string
    AttachmentRequest:
      type: object
      required:
        - file
        - name
      properties:
        name:
          type: string
        file:
          type: string
          format: binary
    OrganizerResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        surname:
          type: string
        orcid:
          type: string
    ConferenceAgenda:
      type: object
      required:
        - sessionIds
      properties:
        sessionIds:
          type: array
          items:
            type: string
    ProfileResponse:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        orcid:
          type: string
        avatarUrl:
          type: string
    UpdateEmailRequest:
      type: object
      properties:
        email:
          type: string
          format: email
    UpdateAvatarRequest:
      type: object
      properties:
        avatarFile:
          type: string
          format: binary
          description: "Avatar image file to be uploaded"

    SesssionEventResponse:
      type: object
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/SessionEventType'
        url:
          type: string
        userId:
          type: string
        timestamp:
          type: string
          format: date-time
        sessionId:
          type: string
